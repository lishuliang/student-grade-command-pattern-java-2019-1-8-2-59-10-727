package com.tw;

import java.util.*;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class Library {

    public boolean someLibraryMethod() {
        return true;
    }

    private Map<String, Student> studentMap = new HashMap<>();//存放存入的学生


    public static void main(String[] args) {
        Library library = new Library();
        library.beginPraogram();
    }

    public void beginPraogram() {
        printMenu();//输出菜单
        int choice = getInputNumber();
        while (choice != 3) {
            if (choice == 1) {
                getStudentInfo();
                printMenu();//输出菜单
                choice = getInputNumber();
            } else if (choice == 2) {
                System.out.println("请输入要打印的学生的学号（格式： 学号, 学号,...），按回车提交：");
                Scanner input = new Scanner(System.in);
                String snoInfo = "";
                snoInfo = input.nextLine();
                while (getScore(snoInfo) == null) {
                    System.out.println("请按正确的格式输入要打印的学生的学号（格式： 学号, 学号,...），按回车提交：");
                    snoInfo = input.nextLine();
                }
                System.out.print(getScore(snoInfo));
                printMenu();//输出菜单
                choice = getInputNumber();
            }
        }
    }

    private void printMenu() {
        System.out.println("1. 添加学生\n" +
                "2. 生成成绩单\n" +
                "3. 退出：\n" +
                "请输入你的选择（1～3）按回车提交:");
    }

    private void printOneMoreInput() {
        System.out.println("输入格式错误，请重新输入你的选择（1～3）:");
    }

    /**
     * 获取用户的输入，如果输入错误就提示知道用户正确输入1~3的整数为止
     *
     * @return 用户的输入
     */
    public boolean checkInputNumber(String input) {
        if (input.matches("[0-9]+")) {
            int in = Integer.valueOf(input);
            if (1 <= in && in <= 3) {
                return true;
            }
        }
        return false;
    }

    private int getInputNumber() {
        Scanner input = new Scanner(System.in);
        String in = input.nextLine();
        while (checkInputNumber(in) != true) {
            printOneMoreInput();
            in = input.nextLine();
        }
        return Integer.valueOf(in);
    }

    /**
     * 检查学生输入的信息是否符合格式
     *
     * @param studentInfo
     * @return 格式不正确返回Null, 否则返回一个Student对象
     */
    public Student checkStudentInfo(String studentInfo) {

        String[] info = studentInfo.split(",");// 姓名，学号，名族,班级,数学:x,语文:x，英语:x，编程:x
        if (info.length == 8) {
            Student student = new Student();
            Grade grade = new Grade();
            student.setSname(info[0].trim());//用户姓名
            student.setSno(Integer.parseInt(info[1].trim()));//学号
            student.setSnation(info[2].trim());//名族
            student.setSclass(Integer.parseInt(info[3].trim()));//班级
            for (int i = 4; i < info.length; i++) {
                String[] subjectInfo = info[i].split(":");
                if (subjectInfo[0].trim().equals("数学")) {
                    grade.setMathematics(Integer.parseInt(subjectInfo[1].trim()));
                } else if (subjectInfo[0].trim().equals("语文")) {
                    grade.setChinese(Integer.parseInt(subjectInfo[1].trim()));
                } else if (subjectInfo[0].trim().equals("英语")) {
                    grade.setEnglish(Integer.parseInt(subjectInfo[1].trim()));
                } else if (subjectInfo[0].trim().equals("编程")) {
                    grade.setProgramming(Integer.parseInt(subjectInfo[1].trim()));
                } else {
                    return null;
                }
            }
            student.setGrade(grade);
            System.out.println(student.toString());
            return student;
        }
        return null;

    }

    private void getStudentInfo() {//abc,1234,数学:99,语文:99,英语:99,编程:99
        boolean flag = true;
        System.out.println("请输入学生信息（格式：姓名, 学号, 民族, 班级, 学科: 成绩, ...），按回车提交:");
        Scanner input = new Scanner(System.in);
        Student student;
        while (flag) {
            String studentInfo = input.nextLine();//获取用户输入的学生信息
            if ((student = checkStudentInfo(studentInfo)) != null) {
                System.out.println("学生" + student.getSname() + "的成绩被添加");
                studentMap.put(student.getSno() + "", student);
                flag = false;
            } else {
                System.out.println("请按正确的格式输入（格式：姓名, 学号, 民族, 班级, 学科: 成绩, ...），按回车提交：");
            }
        }
    }

    public StringBuffer getScore(String snoInfo) {
        Map<String, Integer> addPointsMap = new HashMap<>();//存放加分策略
        addPointsMap.put("少数名族", 10);
        addPointsMap.put("体育特长", 20);
        addPointsMap.put("艺术特长", 15);
        List<Double> totalScoreList = new ArrayList<>();
        StringBuffer bf = new StringBuffer("成绩单\n" + "姓名|名族|班级|数学|语文|英语|编程|平均分|总分\n");
        bf.append("============================================\n");
        String[] snos = snoInfo.split(",");
        if (snoInfo.length() == 0 || snoInfo.isEmpty()) {
            return null;
        } else {
            for (String sno : snos) {
                if (studentMap.containsKey(sno)) {
                    Student student = studentMap.get(sno);
                    Grade grade = student.getGrade();
                    double totalScore = addPointsMap.containsKey(student.getSnation()) ?
                            grade.getTotal() + addPointsMap.get(student.getSnation()) :
                            grade.getTotal();
                    bf.append(student.getSname() + "|" + student.getSnation() + "|" + student.getSclass() + "|" + grade.getMathematics() +
                            "|" + grade.getChinese() + "|" + grade.getEnglish() + "|" +
                            grade.getProgramming() + "|" + grade.getAverage() + "|" +
                            totalScore + "\n");
                    totalScoreList.add(grade.getTotal());
                }
            }
            if (totalScoreList.size() == 0) return null;
            Collections.sort(totalScoreList);
            int num = totalScoreList.size();
            double medianOfEven = 0;
            if (num == 1) {
                medianOfEven = totalScoreList.get(0);
            } else {
                medianOfEven = num % 2 == 0 ? (totalScoreList.get(num / 2 - 1) + totalScoreList.get(num / 2)) / 2 : totalScoreList.get(num / 2);
            }
            double average = totalScoreList.stream()
                    .mapToInt(Double::intValue).average().getAsDouble();
            bf.append("全班总分平均数：" + average + "\n");
            bf.append("全班总分中位数：" + medianOfEven + "\n");
        }
        return bf;
    }
}